{"version":3,"sources":["images/epic-auto-claim.png","helpers/history.js","utils/route.js","utils/constants.js","utils/session.js","utils/services/login.service.js","utils/services/free-games.service.js","redux/login/actionType.js","redux/login/actions.js","components/app/appSchema.js","components/app/app.js","components/loading/loading.js","components/captcha/captcha.js","helpers/load-script.js","helpers/remove-script.js","components/profile/profile.js","components/twofactor/twofactor.js","components/notfound/notfound.js","redux/login/reducer.js","redux/reducer.js","serviceWorker.js","index.js","redux/store.js"],"names":["module","exports","history","createBrowserHistory","mapStateToProps","userPresent","user","Protected","OriginalComponent","withRouter","connect","location","state","email","to","Auth","API_ENDPOINT","LOGIN_ENDPOINT","LOGIN_MFA_ENDPOINT","FREE_GAMES_ENDPOINT","USER_INFO","SESSION_ENDPOINT","PURCHASE_ENDPOINT","EpicArkosePublicKey","checkSessionInfo","a","Axios","get","withCredentials","response","isLoggedIn","data","session","preloadedState","loginService","login","password","captcha","requestOption","method","url","then","handleLoginResponse","catch","handleError","loginMfa","code","getProfile","handleDataResponse","error","freegamesService","getFreeGames","purhcase","handleStatusResponse","status","statusText","userDispatch","dispatch","type","loginSchema","Yup","shape","required","props","useState","isLoading","setLoading","useForm","resolver","yupResolver","mode","handleSubmit","register","errors","getValues","isRequired","name","className","src","Logo","alt","style","width","height","autoComplete","id","placeholder","inputMode","aria-label","autoCorrect","autoCapitalize","spellCheck","aria-invalid","ref","values","isEnable","onClick","push","e","errorCode","includes","console","log","metadata","twoFactorMethod","fontSize","Loading","Container","fluid","padding","React","Component","Captcha","loading","d","s","jsSrc","cb","element","getElementsByTagName","fjs","js","createElement","defer","parentNode","insertBefore","head","appendChild","onload","loadScript","document","scriptLoaded","this","setState","window","FunCaptcha","public_key","target_html","callback","sessionData","getElementById","removeChild","removeScript","Row","freeGames","map","detail","index","date","Date","endDate","mo","Intl","DateTimeFormat","month","format","da","day","ti","hour","minute","Col","sm","paddingBottom","key","Card","CardImg","top","keyImages","filter","images","productName","purchasable","CardImgOverlay","marginBottom","size","color","CardText","opacity","CardBody","CardTitle","margin","userInfo","displayName","value","renderCard","setCode","onSubmit","preventDefault","backgroundColor","onChange","number","getElementsByClassName","i","length","innerHTML","classList","contains","add","remove","marginTop","maxWidth","maxHeight","NotFound","initialState","combineReducers","action","Boolean","hostname","match","renderApp","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","exact","path","component","App","TwoFactor","Profile","from","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.dad5de4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/epic-auto-claim.6a8ee48e.png\";","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import React from 'react';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = ({ user: { userPresent } }) => ({\r\n    userPresent\r\n});\r\n\r\nexport const Protected = OriginalComponent => {\r\n    const ProtectedComponent = ({ userPresent, location }) => (\r\n        location?.state?.email ?\r\n            <OriginalComponent /> :\r\n            (\r\n                userPresent ?\r\n                    <Redirect to='/profile' /> :\r\n                    <Redirect to='/' />\r\n            )\r\n    );\r\n    return withRouter(\r\n        connect(mapStateToProps)(ProtectedComponent)\r\n    );\r\n}\r\n\r\nexport const Auth = OriginalComponent => {\r\n    const AuthComponent = ({ userPresent }) => (\r\n        userPresent ?\r\n            <OriginalComponent /> :\r\n            <Redirect to='/' />\r\n    );\r\n    return withRouter(\r\n        connect(mapStateToProps)(AuthComponent)\r\n    );\r\n}\r\n\r\nexport const OnlyNotAuth = OriginalComponent => {\r\n    const OnlyNotAuthComponent = ({ userPresent }) => (\r\n        userPresent ?\r\n            <Redirect to='/profile' /> :\r\n            <OriginalComponent />\r\n    );\r\n    return withRouter(\r\n        connect(mapStateToProps)(OnlyNotAuthComponent)\r\n    );\r\n}","// const API_ENDPOINT = 'https://epicauto.herokuapp.com'\r\nconst API_ENDPOINT = 'https://epic-auto.appspot.com';\r\n// const API_ENDPOINT = 'http://localhost:3001'\r\n\r\nexport const LOGIN_ENDPOINT = `${API_ENDPOINT}/api/login`;\r\nexport const LOGIN_MFA_ENDPOINT = `${API_ENDPOINT}/api/login/mfa`;\r\nexport const FREE_GAMES_ENDPOINT = `${API_ENDPOINT}/api/freegames`;\r\nexport const USER_INFO = `${API_ENDPOINT}/api/profile`;\r\nexport const SESSION_ENDPOINT = `${API_ENDPOINT}/api/session`;\r\nexport const PURCHASE_ENDPOINT = `${API_ENDPOINT}/api/purchase`;\r\n\r\nexport const EpicArkosePublicKey = {\r\n  LOGIN: '37D033EB-6489-3763-2AE1-A228C04103F5',\r\n  CREATE: 'E8AD0E2A-2E72-0F06-2C52-706D88BECA75',\r\n  PURCHASE: 'B73BD16E-3C8E-9082-F9C7-FA780FF2E68B'\r\n}","import Axios from 'axios';\r\nimport { SESSION_ENDPOINT } from '../utils/constants';\r\n\r\nexport const checkSessionInfo = async () => {\r\n    const response = await Axios.get(SESSION_ENDPOINT, { withCredentials: true });\r\n    const isLoggedIn = response.data.session.userPresent;\r\n\r\n    // login to ensure third party session\r\n    // const { statusText } = await loginService.login(email, '', '');\r\n    // if (isLoggedIn && statusText === \"OK\") {\r\n\r\n    let preloadedState = {};\r\n    if (isLoggedIn) {\r\n        const {\r\n            email, userPresent\r\n        } = response.data.session;\r\n        preloadedState = {\r\n            user: {\r\n                userPresent,\r\n                email\r\n            }\r\n        }\r\n    }\r\n    \r\n    return preloadedState;\r\n}","// import cookieParser from 'set-cookie-parser'\r\nimport Axios from 'axios';\r\nimport {\r\n    LOGIN_ENDPOINT,\r\n    LOGIN_MFA_ENDPOINT,\r\n    USER_INFO\r\n} from '../constants';\r\n\r\nexport const loginService = {\r\n    login,\r\n    loginMfa,\r\n    getProfile\r\n}\r\n\r\nfunction login(email, password, captcha = \"\") {\r\n    const requestOption = {\r\n        method: 'POST',\r\n        url: LOGIN_ENDPOINT,\r\n        data: {\r\n            email,\r\n            password,\r\n            captcha\r\n        }\r\n    };\r\n    return Axios(requestOption)\r\n        .then(handleLoginResponse)\r\n        .catch(handleError);\r\n}\r\n\r\nfunction loginMfa(email, code, method) {\r\n    const requestOption = {\r\n        method: 'POST',\r\n        url: LOGIN_MFA_ENDPOINT,\r\n        data: {\r\n            email,\r\n            code,\r\n            method\r\n        }\r\n    }\r\n    return Axios(requestOption)\r\n        .then(handleLoginResponse)\r\n        .catch(handleError);\r\n}\r\n\r\nfunction getProfile(email) {\r\n    const requestOption = {\r\n        method: 'POST',\r\n        url: USER_INFO,\r\n        data: {\r\n            email\r\n        }\r\n    };\r\n    return Axios(requestOption)\r\n        .then(handleDataResponse)\r\n        .catch(handleError);\r\n}\r\n\r\nfunction handleLoginResponse(response) {\r\n    return response;\r\n}\r\n\r\nfunction handleDataResponse(response) {\r\n    const { data } = response;\r\n    return data;\r\n}\r\n\r\nfunction handleError(error) {\r\n    // const { data } = error.response;\r\n    // const err = (data && data.message) || error.response.statusText;\r\n    throw error;\r\n}","import Axios from 'axios'\r\nimport {\r\n    FREE_GAMES_ENDPOINT,\r\n    PURCHASE_ENDPOINT\r\n} from '../constants';\r\n\r\nexport const freegamesService = {\r\n    getFreeGames,\r\n    purhcase\r\n}\r\n\r\nfunction getFreeGames(email) {\r\n    const requestOption = {\r\n        method: 'POST',\r\n        url: FREE_GAMES_ENDPOINT,\r\n        data: {\r\n            email\r\n        }\r\n    };\r\n    return Axios(requestOption)\r\n        .then(handleDataResponse)\r\n        .catch(handleError)\r\n}\r\n\r\nfunction purhcase(email) {\r\n    const requestOption = {\r\n        method: 'POST',\r\n        url: PURCHASE_ENDPOINT,\r\n        data: {\r\n            email\r\n        }\r\n    };\r\n    return Axios(requestOption)\r\n        .then(handleStatusResponse)\r\n        .catch(handleError)\r\n}\r\n\r\nfunction handleStatusResponse(response) {\r\n    const { status, statusText } = response;\r\n    return { status, statusText };\r\n}\r\n\r\nfunction handleDataResponse(response) {\r\n    const { data } = response;\r\n    return data;\r\n}\r\n\r\nfunction handleError(error) {\r\n    throw error;\r\n}","export const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';","import { LOGIN } from './actionType'\r\n\r\nexport const userDispatch = (email) => {\r\n    return async dispatch => {\r\n        dispatch({ type: LOGIN, email })\r\n    }\r\n}","import * as Yup from 'yup';\r\n\r\n// const emailRegex = /^([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\r\n\r\nexport const loginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .required(),\r\n        // .min(5)\r\n        // .matches(emailRegex),\r\n    password: Yup.string()\r\n        .required()\r\n        // .min(5)\r\n}); ","import React, { useState } from 'react';\r\nimport Logo from '../../images/epic-auto-claim.png';\r\nimport { connect } from 'react-redux';\r\nimport { loginService } from '../../utils/services';\r\nimport { userDispatch } from '../../redux/login/actions';\r\nimport { loginSchema } from './appSchema';\r\nimport { history } from '../../helpers';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers';\r\n\r\nimport './app.css';\r\n\r\nconst App = (props) => {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const { handleSubmit, register, errors, getValues } = useForm({\r\n        resolver: yupResolver(loginSchema),\r\n        mode: \"all\"\r\n    });\r\n\r\n    const onSubmit = ({ email, password }) => {\r\n        setLoading(true);\r\n        loginService.login(email, password)\r\n            .then(({ statusText }) => { \r\n                setLoading(false);\r\n                props.userDispatch(email);\r\n                history.push(\"/profile\", { email });\r\n                // if(statusText === \"OK\") {\r\n                // }\r\n            })\r\n            .catch((e) => {\r\n                setLoading(false);\r\n                if (e.response && e.response.data && e.response.data.errorCode) {\r\n                    // wrong password\r\n                    //  \"errorCode\": \"errors.com.epicgames.common.two_factor_authentication.required\", metadata: { twoFactorMethod: 'sms', alternateMethods: [ 'sms', 'email' ] }\r\n                    //  \"errorCode\": \"errors.com.epicgames.account.invalid_account_credentials\"\r\n                    if (e.response.data.errorCode.includes('session_invalidated')) {\r\n                        \r\n                    } else if (\r\n                        e.response.data.errorCode === 'errors.com.epicgames.accountportal.captcha_invalid'\r\n                    ) {\r\n                        history.push(\"/captcha\", { email, password });\r\n                    } else if (\r\n                        e.response.data.errorCode === 'errors.com.epicgames.common.two_factor_authentication.required'\r\n                    ) {\r\n                        console.log('TWO FACTOR YOU FUCKER.');\r\n                        const method = e.response.data.metadata.twoFactorMethod;\r\n                        history.push(\"/twofactor\", { email, password, method });\r\n                    }\r\n                }\r\n            });\r\n    }\r\n    const isRequired = (name) => {\r\n        if (errors?.[name]?.type === \"required\") {\r\n            return \"MuiInputBase-root MuiInput-root MuiInputBase-adornedEnd Mui-error\";\r\n        }\r\n        return \"MuiInputBase-root MuiInput-root MuiInputBase-adornedEnd\";\r\n    };\r\n\r\n    const isEnable = () => {\r\n        var values = getValues([\"email\", \"password\"]);\r\n        if (values[\"email\"] && values[\"password\"] && !isLoading) {\r\n            return \"MuiButtonBase-root MuiButton-root MuiButton-contained SubmitButton MuiButton-containedPrimary MuiButton-fullWidth\";\r\n        }\r\n        return \"MuiButtonBase-root MuiButton-root MuiButton-contained SubmitButton MuiButton-containedPrimary MuiButton-fullWidth Mui-disabled\";\r\n    };\r\n\r\n    return (\r\n        <div className=\"modalbase-container\">\r\n            <div className=\"modalbase-content\">\r\n                <div className=\"modalbase-card\">\r\n                    <div className=\"optional-top-spacer\"></div>\r\n                    <div className=\"modalbase-card-content\">\r\n                        <div className=\"layout-vertical\">\r\n                            <div className=\"epiclogo-layout\">\r\n                                <img src={Logo} alt=\"Logo\" className=\"EpicLogo\" style={{ width: 130, height: 50 }} />\r\n                            </div>\r\n                            <h6 className=\"MuiTypography-root Subheading upper MuiTypography-subtitle1\">Sign in with an Epic Games Account</h6>\r\n                            <form className=\"form-vertical\">\r\n                                <div className=\"MuiFormControl-root form-field MuiFormControl-fullWidth\">\r\n                                    <div className={isRequired(\"email\")}>\r\n                                        <input\r\n                                            autoComplete=\"email\"\r\n                                            id=\"email\"\r\n                                            name=\"email\"\r\n                                            placeholder=\"Email Address\"\r\n                                            type=\"text\" inputMode=\"text\"\r\n                                            aria-label=\"email\"\r\n                                            autoCorrect=\"off\"\r\n                                            autoCapitalize=\"none\"\r\n                                            spellCheck=\"false\"\r\n                                            className=\"MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd\"\r\n                                            aria-invalid=\"true\"\r\n                                            ref={register}\r\n                                        />\r\n                                        {\r\n                                            errors?.email?.type === \"required\" ?\r\n                                                <div className=\"MuiInputAdornment-root upper validation-adornment MuiInputAdornment-filled MuiInputAdornment-positionEnd\">\r\n                                                    Required\r\n                                                </div> : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"MuiFormControl-root form-field MuiFormControl-fullWidth\">\r\n                                    <div className={isRequired(\"password\")}>\r\n                                        <input\r\n                                            autoComplete=\"current-password\"\r\n                                            id=\"password\"\r\n                                            name=\"password\"\r\n                                            placeholder=\"Password\"\r\n                                            type=\"password\" inputMode=\"text\"\r\n                                            aria-label=\"password\"\r\n                                            className=\"MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd\"\r\n                                            ref={register}\r\n                                        />\r\n                                        {\r\n                                            errors?.password?.type === \"required\" ?\r\n                                                <div className=\"MuiInputAdornment-root upper validation-adornment MuiInputAdornment-filled MuiInputAdornment-positionEnd\">\r\n                                                    Required\r\n                                                </div> : null\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"controls-vertical\">\r\n                                    <button\r\n                                        className={isEnable()}\r\n                                        type=\"submit\"\r\n                                        aria-label=\"sign-in\"\r\n                                        onClick={handleSubmit(onSubmit)}\r\n                                    >\r\n                                        { !isLoading ? <span className=\"MuiButton-label\">Log in now</span>: null }\r\n                                        { isLoading ? <i style={{ fontSize: 20 }} className=\"fa fa-circle-o-notch fa-spin\"></i> : null }\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"optional-bottom-spacer\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(null,{userDispatch})(App);","import React from 'react';\r\nimport {\r\n    Container\r\n} from 'reactstrap';\r\n\r\nimport './loading.css';\r\n\r\nclass Loading extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container fluid={true} style={{ padding: 0, height: '100%' }} className=\"d-flex justify-content-center\">\r\n                <span className=\"loader\">\r\n                    <span className=\"loader-inner\"></span>\r\n                </span>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading; ","import React from 'react';\r\nimport Loading from '../loading';\r\nimport { connect } from 'react-redux';\r\nimport { userDispatch } from '../../redux/login/actions';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { EpicArkosePublicKey } from '../../utils/constants';\r\nimport { loginService } from '../../utils/services';\r\nimport { history } from '../../helpers';\r\nimport loadScript from '../../helpers/load-script';\r\nimport removeScript from '../../helpers/remove-script';\r\nimport {\r\n    Container, Row\r\n} from 'reactstrap';\r\n\r\nclass Captcha extends React.Component {\r\n    state = {\r\n        loading: false\r\n    }\r\n    componentDidMount() {\r\n        loadScript(\r\n            document,\r\n            'script',\r\n            'fun-captcha',\r\n            'https://cdn.arkoselabs.com/fc/js/96677ba21f0e74ba2a358a3053d33cd9/standard/funcaptcha_api.js',\r\n            () => {\r\n                this.scriptLoaded();\r\n            });\r\n    }\r\n\r\n    scriptLoaded() {\r\n        this.setState({ loading: true });\r\n        if (this.props.location.state) {\r\n            var { email, password } = this.props.location.state;\r\n        }\r\n        new window.FunCaptcha({\r\n            public_key: EpicArkosePublicKey.LOGIN,\r\n            target_html: \"CAPTCHA\",\r\n            callback: (sessionData) => {\r\n                loginService.login(email, password, sessionData)\r\n                    .then(({ statusText }) => {\r\n                        this.props.userDispatch(email);\r\n                        history.push(\"/profile\", { email });\r\n                    }).catch((e) => {\r\n                        if (\r\n                            e.response.data.errorCode === 'errors.com.epicgames.common.two_factor_authentication.required'\r\n                        ) {\r\n                            const method = e.response.data.metadata.twoFactorMethod;\r\n                            history.push(\"/twofactor\", { email, password, method });\r\n                        } else {\r\n                            history.push(\"/\");\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        removeScript(document, 'fun-captcha');\r\n    }\r\n\r\n    render() {\r\n        const { loading } = this.state;\r\n        return (\r\n            <Container style={{ padding: 0, height: '100%' }}>\r\n                {\r\n                    loading ?\r\n                        <span style={{ padding: 0, height: '100%' }} className=\"d-flex justify-content-center\">\r\n                            <Row className=\"align-items-center align-middle\">\r\n                                <div id=\"CAPTCHA\"></div>\r\n                            </Row>\r\n                        </span>\r\n                        : <Loading />\r\n                }\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(null, { userDispatch })(Captcha)\r\n);","export default (d, s, id, jsSrc, cb) => {\r\n    const element = d.getElementsByTagName(s)[0];\r\n    const fjs = element;\r\n    let js = element;\r\n    js = d.createElement(s);\r\n    js.defer = true;\r\n    js.id = id;\r\n    js.src = jsSrc;\r\n    if (fjs && fjs.parentNode) {\r\n        fjs.parentNode.insertBefore(js, fjs);\r\n    } else {\r\n        d.head.appendChild(js);\r\n    }\r\n    js.onload = cb;\r\n}","export default (d, id) => {\r\n    const element = d.getElementById(id);\r\n\r\n    if (element) {\r\n        element.parentNode.removeChild(element);\r\n    }\r\n}","import React from 'react';\r\nimport Loading from '../loading';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { freegamesService, loginService } from '../../utils/services';\r\nimport {\r\n    Col,\r\n    Row,\r\n    Card, CardImg, CardTitle,\r\n    CardText, CardBody, CardImgOverlay,\r\n    Container\r\n} from 'reactstrap';\r\nimport {\r\n    CheckCircle\r\n} from 'react-feather';\r\n\r\nimport \"./profile.css\";\r\n\r\nconst mapStateToProps = ({ user: { email, userPresent } }) => ({\r\n    email,\r\n    userPresent\r\n})\r\n\r\nclass Captcha extends React.Component {\r\n    state = {\r\n        freeGames: null,\r\n        user: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { email } = this.props;\r\n        freegamesService.getFreeGames(email)\r\n            .then((freeGames) => {\r\n                this.setState({ freeGames })\r\n            }).catch((e) => {\r\n                console.log(e);\r\n                loginService.getProfile(email)\r\n                    .then((user) => {\r\n                        console.log(user);\r\n                        this.setState({ user })\r\n                        freegamesService.getFreeGames(email)\r\n                            .then((freeGames) => {\r\n                                this.setState({ freeGames })\r\n                            }).catch((e) => {\r\n                                console.log(e);\r\n                            });\r\n                    }).catch((e) => {\r\n                        console.log(e);\r\n                    });\r\n            });\r\n        // freegamesService.purhcase(email)\r\n        //     .then(({ statusText }) => {\r\n        //         if (statusText === \"OK\") {\r\n        //             console.log(\"OK\")\r\n        //             freegamesService.getFreeGames(email)\r\n        //                 .then((freeGames) => { \r\n        //                     this.setState({ freeGames })\r\n        //                 }).catch((e) => {\r\n        //                     console.log(e);\r\n        //                 });\r\n        //         }\r\n        //     }).catch((e) => {\r\n        //         console.log(e);\r\n        //     });\r\n\r\n    }\r\n\r\n    renderCard(freeGames) {\r\n        return freeGames.map((detail, index) => {\r\n            var date = new Date(detail.endDate)\r\n            const mo = new Intl.DateTimeFormat('th', { month: 'short' }).format(date);\r\n            const da = new Intl.DateTimeFormat('th', { day: '2-digit' }).format(date);\r\n            const ti = new Intl.DateTimeFormat('th', { hour: 'numeric', minute: 'numeric' }).format(date);\r\n            return (\r\n                <Col sm={3} className=\"d-flex align-items-center align-middle justify-content-center\" style={{ paddingBottom: 15 }} key={index}>\r\n                    <Card>\r\n                        <CardImg top src={detail?.keyImages.filter(images => images.type === \"Thumbnail\")[0]?.url} alt={detail?.productName} />\r\n                        {\r\n                            !detail.purchasable ?\r\n                                <CardImgOverlay className=\"d-flex align-items-center justify-content-center\">\r\n                                    <span style={{ marginBottom: 70 }}>\r\n                                        <span className=\"d-flex justify-content-center\">\r\n                                            <CheckCircle size={'80px'} color={\"#4fdf6f\"} />\r\n                                        </span>\r\n                                        <br />\r\n                                        <CardText style={{ fontSize: '18px', opacity: 1, color: '#fff' }}>ALREADY CLAIM</CardText>\r\n                                    </span>\r\n                                </CardImgOverlay> : null\r\n                        }\r\n                        <CardBody>\r\n                            <CardTitle>{detail?.productName}</CardTitle>\r\n                            <CardText>ฟรีแล้ววันนี้ - {`${mo} ${da} เวลา ${ti}`}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { freeGames, user } = this.state;\r\n        const { userPresent } = this.props;\r\n        return (\r\n            <>\r\n                {\r\n                    freeGames && user && userPresent ?\r\n                        <Container fluid={true} style={{ padding: 0, height: '100%' }}>\r\n                            <div className=\"content\">\r\n                                <Row className=\"justify-content-center\" style={{ margin: \"20px\" }}>\r\n                                    <div className=\"greet-text\">\r\n                                        {'  '}Hello {user?.userInfo?.displayName?.value}! {'  '}\r\n                                    </div>\r\n                                </Row>\r\n                                <div className=\"d-flex align-items-center align-middle\">\r\n                                    <Row className=\"justify-content-center\">\r\n                                        {freeGames ? this.renderCard(freeGames) : null}\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                        </Container> :\r\n                        <Loading />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(\r\n    connect(mapStateToProps)(Captcha)\r\n);","import React, { useState } from 'react';\r\nimport Logo from '../../images/epic-auto-claim.png';\r\nimport ReactInputVerificationCode from 'react-input-verification-code';\r\nimport { connect } from 'react-redux';\r\nimport { userDispatch } from '../../redux/login/actions';\r\nimport { history } from '../../helpers';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { loginService } from '../../utils/services';\r\n\r\nimport '../app/app.css';\r\nimport '../twofactor/twofactor.css';\r\n\r\nconst TwoFactor = (props) => {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [code, setCode] = useState(null);\r\n\r\n    const onChange = (number) => {\r\n        setCode(number);\r\n        const element = document.getElementsByClassName(\"ReactInputVerificationCode__item\")\r\n        for (let i = 0; i < element.length; i++) {\r\n            if (element[i].innerHTML) {\r\n                let classLs = element[i].classList;\r\n                if (!classLs.contains(\"haveInput\")) {\r\n                    element[i].classList.add(\"haveInput\");\r\n                }\r\n            } else {\r\n                element[i].classList.remove(\"haveInput\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        if (props.location.state) {\r\n            var { email, method } = props.location.state;\r\n        }\r\n        setLoading(true);\r\n        loginService.loginMfa(email, code, method)\r\n            .then(({ statusText }) => {\r\n                setLoading(false);\r\n                props.userDispatch(email);\r\n                history.push(\"/profile\", { email });\r\n                // if (statusText === \"OK\") {\r\n                // }\r\n            })\r\n            .catch((e) => {\r\n                setLoading(false);\r\n                history.push(\"/\");\r\n            });\r\n    }\r\n\r\n    const isEnable = () => {\r\n        if (code && code.length >= 6 && !isLoading) {\r\n            return \"MuiButtonBase-root MuiButton-root MuiButton-contained SubmitButton MuiButton-containedPrimary MuiButton-fullWidth\";\r\n        }\r\n        return \"MuiButtonBase-root MuiButton-root MuiButton-contained SubmitButton MuiButton-containedPrimary MuiButton-fullWidth Mui-disabled\";\r\n    };\r\n\r\n    return (\r\n        <div className=\"modalbase-container\">\r\n            <div className=\"modalbase-content\">\r\n                <div className=\"modalbase-card\">\r\n                    <div className=\"optional-top-spacer\"></div>\r\n                    <div className=\"modalbase-card-content\">\r\n                        <div className=\"layout-vertical\">\r\n                            <div className=\"epiclogo-layout\">\r\n                                <img src={Logo} alt=\"Logo\" className=\"EpicLogo\" style={{ width: 130, height: 50 }} />\r\n                            </div>\r\n                            <h6 className=\"d-flex justify-content-center MuiTypography-root Subheading upper center MuiTypography-subtitle1\">Enter the security code to continue</h6>\r\n                            <form className=\"form-vertical\" onSubmit={e => e.preventDefault()}>\r\n                                <div className=\"MuiFormControl-root form-field masked-code MuiFormControl-fullWidth\" style={{ backgroundColor: 'inherit' }}>\r\n                                    <div className=\"custom-styles\">\r\n                                        <ReactInputVerificationCode\r\n                                            id=\"input-verification-code\"\r\n                                            placeholder=\"\"\r\n                                            onChange={onChange}\r\n                                            length={6}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"controls-horizontal\" style={{ marginTop: '30px' }}>\r\n                                    <button\r\n                                        className=\"MuiButtonBase-root MuiButton-root MuiButton-contained CancelButton MuiButton-containedSecondary MuiButton-fullWidth\"\r\n                                        type=\"button\"\r\n                                        id=\"cancel\"\r\n                                    >\r\n                                        <span className=\"MuiButton-label\">Cancel</span>\r\n                                    </button>\r\n                                    <div className=\"Spacer\" style={{ width: '100%', height: '0px', maxWidth: '25px', maxHeight: '0px' }}></div>\r\n                                    <button\r\n                                        className={isEnable()}\r\n                                        type=\"submit\"\r\n                                        id=\"continue\"\r\n                                        onClick={onSubmit}\r\n                                    >\r\n                                        {!isLoading ? <span className=\"MuiButton-label\">Continue</span> : null}\r\n                                        {isLoading ? <i style={{ fontSize: 20 }} className=\"fa fa-circle-o-notch fa-spin\"></i> : null}\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"optional-bottom-spacer\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(\r\n    connect(null, { userDispatch })(TwoFactor)\r\n);","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nimport './notfound.css';\r\n\r\nclass NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container fluid style={{ height: '100%' }} className=\"wrapper d-flex align-items-center align-middle\">\r\n                <Col>\r\n                    <Row>\r\n                        <div className=\"head\">\r\n                            <div className=\"meta\"></div>\r\n                            <div className=\"meta\"></div>\r\n                        </div>\r\n                    </Row>\r\n                    <span style={{ width: '100%', height: '100%' }} className=\"d-flex justify-content-center\">\r\n                        <div className=\"body\">\r\n                        </div>\r\n                    </span>\r\n                </Col>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import {\r\n    LOGIN\r\n} from './actionType';\r\n\r\nconst initialState = {\r\n    userPresent: false\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n            return {\r\n                userPresent: true, email: action.email\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport userReducer from './login/reducer';\r\n\r\nexport default combineReducers({\r\n    user: userReducer\r\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { history } from './helpers';\nimport { Provider } from 'react-redux';\nimport { Protected, Auth, OnlyNotAuth } from './utils/route';\nimport { checkSessionInfo } from './utils/session';\nimport App from './components/app';\nimport Captcha from './components/captcha';\nimport Profile from './components/profile';\nimport TwoFactor from './components/twofactor';\nimport NotFound from './components/notfound';\nimport configureStore from './redux/store';\nimport * as serviceWorker from './serviceWorker';\nimport {\n  Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst renderApp = preloadedState => {\n  const store = configureStore(preloadedState);\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router history={history}>\n        <Switch>\n          <Route\n            exact path='/'\n            component={OnlyNotAuth(App)}\n          />\n          <Route\n            path='/captcha'\n            component={Protected(Captcha)}\n          />\n          <Route\n            path='/twofactor'\n            component={Protected(TwoFactor)}\n          />\n          <Route\n            path='/profile'\n            component={Auth(Profile)}\n          />\n          <Route\n            path='/404'\n            component={NotFound}\n          />\n          <Redirect from='*' to='/404' />\n        </Switch>\n      </Router>\n    </Provider>,\n    document.getElementById('root')\n  );\n}\n\n(async () => renderApp(await checkSessionInfo()))();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducer';\r\n\r\nexport default initialState => (\r\n    createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(thunk)\r\n    )\r\n);"],"sourceRoot":""}